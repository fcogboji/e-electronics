generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id     String  @id @default(cuid())
  email  String  @unique
  orders Order[] @relation("UserOrders")
}

model Product {
  id           String   @id @default(cuid())
  name         String
  price        Int
  image        String
  description  String
  brand        String
  category     String
  discount     Int?
  stock        Int      @default(0)
  createdAt    DateTime @default(now())
  avgRating    Float?
  totalReviews Int      @default(0)

  wishlists  Wishlist[]
  reviews    Review[]
  orderItems OrderItem[]
}

model Order {
  id              String   @id @default(cuid())
  userId          String? // ✅ optional
  email           String
  amount          Float
  status          String   @default("pending")
  paymentIntentId String?
  createdAt       DateTime @default(now())

  customerName    String?
  phone           String?
  shippingAddress String?
  city            String?
  state           String?
  postalCode      String?
  country         String?

  user       User?       @relation("UserOrders", fields: [userId], references: [id]) // ✅ optional
  orderItems OrderItem[]
}

model OrderItem {
  id        String @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Float

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

model ReturnRequest {
  id        String   @id @default(cuid())
  orderId   String
  reason    String
  details   String?
  userId    String
  createdAt DateTime @default(now())
}

model Wishlist {
  id        String   @id @default(cuid())
  userId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  createdAt DateTime @default(now())
}

model Review {
  id        String   @id @default(cuid())
  rating    Int
  comment   String?
  userId    String
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([userId, productId])
  @@map("reviews")
}
